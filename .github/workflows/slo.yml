name: Full SLO test workflow

on:
  workflow_call:
    inputs:
      language:
        description: "SDK language or language+variant"
        required: true
        type: string
      workload_path:
        description: "Workload folder to build docker image from"
        required: true
        type: string
    secrets:
      SLO_KUBE_CONFIG:
        required: true
      SLO_DOCKER_REPO:
        required: true
      SLO_DOCKER_FOLDER:
        required: true
      SLO_DOCKER_USERNAME:
        required: true
      SLO_DOCKER_PASSWORD:
        required: true
      SLO_AWS_CREDENTIALS:
        required: true
      SLO_AWS_CONFIG:
        required: true
      SLO_S3_ENDPOINT:
        required: true

concurrency: slo

jobs:
  create-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: create-cluster
        uses: ydb-platform/slo-tests/.github/actions/cluster@main
        with:
          KUBE_CONFIG: ${{ secrets.SLO_KUBE_CONFIG }}
          command: apply

  build-workload:
    uses: ./.github/workflows/build-workload.yml
    secrets:
      DOCKER_REPO: ${{ secrets.SLO_DOCKER_REPO }}
      DOCKER_FOLDER: ${{ secrets.SLO_DOCKER_FOLDER }}
      DOCKER_USERNAME: ${{ secrets.SLO_DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.SLO_DOCKER_PASSWORD }}
    with:
      language: ${{ inputs.language }}
      workload_path: ${{ inputs.workload_path }}

  create-tables:
    needs: [create-cluster, build-workload]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: _slo_test_workflow_
          repository: ydb-platform/slo-tests

      - run: mkdir $HOME/.kube; echo "${{ secrets.SLO_KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Run workload
        uses: ./_slo_test_workflow_/.github/actions/workload
        with:
          language: "${{ inputs.language }}"
          command: "create"
          timeout: "20s"

  run-workload:
    needs: [create-cluster, create-tables, build-workload]
    uses: ./.github/workflows/run-slo.yml
    secrets:
      KUBE_CONFIG: ${{ secrets.SLO_KUBE_CONFIG }}
    with:
      language: ${{ inputs.language }}

  check-results:
    needs: [run-workload]
    uses: ./.github/workflows/check-prometheus.yml
    secrets:
      KUBE_CONFIG: ${{ secrets.SLO_KUBE_CONFIG }}
    with:
      test_start: ${{ needs.run-workload.outputs.test_start }}
      test_end: ${{ needs.run-workload.outputs.test_end }}
      test_start_iso: ${{ needs.run-workload.outputs.test_start_iso }}
      test_end_iso: ${{ needs.run-workload.outputs.test_end_iso }}

  cleanup-tables:
    needs: [run-workload]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: _slo_test_workflow_
          repository: ydb-platform/slo-tests

      - run: mkdir $HOME/.kube; echo "${{ secrets.SLO_KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Run workload
        uses: ./_slo_test_workflow_/.github/actions/workload
        with:
          language: "${{ inputs.language }}"
          command: "cleanup"
          timeout: "20s"

  grafana-screenshot:
    needs: [run-workload]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: _slo_test_workflow_
          repository: ydb-platform/slo-tests

      - run: mkdir $HOME/.kube; echo "${{ secrets.SLO_KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Create screenshot
        uses: ./_slo_test_workflow_/.github/actions/grafana-screenshot
        id: screenshot
        with:
          time_from: ${{ needs.run-workload.outputs.test_start }}
          time_to: ${{ needs.run-workload.outputs.test_end }}
          AWS_CREDENTIALS: ${{ secrets.SLO_AWS_CREDENTIALS }}
          AWS_CONFIG: ${{ secrets.SLO_AWS_CONFIG }}
          s3-endpoint: ${{ vars.SLO_S3_ENDPOINT }}
          image-folder: "${{ vars.SLO_S3_IMAGES_FOLDER }}"
          image-prefix: "${{ inputs.language }}"

      - name: Log image URL
        run: echo "${{ steps.screenshot.outputs.picture-url}}"

      - name: Add comment to PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          comment_tag: slo-image
          message: |
            Here are results of SLO test :volcano: :

            [Grafana Dashboard](${{ vars.INGRESS_ADDRESS }}/d/${{ vars.GRAFANA_DASHBOARD }}?orgId=1&from=${{ needs.run-workload.outputs.test_start }}&to=${{ needs.run-workload.outputs.test_end }})

            ![SLO-${{ inputs.language }}](${{ steps.screenshot.outputs.picture-url}})

  # delete-cluster:
  #   needs: [grafana-screenshot]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         path: _slo_test_workflow_
  #         repository: ydb-platform/slo-tests
  #     - name: create-cluster
  #       uses: ./_slo_test_workflow_/.github/actions/cluster
  #       with:
  #         KUBE_CONFIG: ${{ secrets.SLO_KUBE_CONFIG }}
  #         command: delete
