{"k8s/create-sa.yaml":{"isBinary":false,"fileName":"k8s/create-sa.yaml","originalFileName":"k8s/create-sa.yaml","content":"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: ci-user\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: ci-user\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: ci-user\n  namespace: kube-system"},"k8s/ingress.yaml":{"isBinary":false,"fileName":"k8s/ingress.yaml","originalFileName":"k8s/ingress.yaml","content":"kind: Service\napiVersion: v1\nmetadata:\n  name: grafana-local\n  namespace: dmz-ns\nspec:\n  type: ExternalName\n  externalName: grafana.default.svc.cluster.local\n  # ports:\n  #   - port: 80\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: slo-ingress\n  namespace: dmz-ns\n  annotations:\n    # type of authentication\n    nginx.ingress.kubernetes.io/auth-type: basic\n    # name of the secret that contains the user/password definitions\n    nginx.ingress.kubernetes.io/auth-secret: default/ingress-basic-auth\n    # message to display with an appropriate context why the authentication is required\n    nginx.ingress.kubernetes.io/auth-realm: \"Authentication Required\"\nspec:\n  rules:\n    - http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: grafana-local\n                port:\n                  number: 80\n  ingressClassName: nginx\n"},"k8s/grafana-renderer.yaml":{"isBinary":false,"fileName":"k8s/grafana-renderer.yaml","originalFileName":"k8s/grafana-renderer.yaml","content":"kind: Service\napiVersion: v1\nmetadata:\n  name: grafana-renderer\nspec:\n  selector:\n    app: grafana-renderer\n  ports:\n    - port: 80\n      targetPort: 8081\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: grafana-renderer\n  labels:\n    app: grafana-renderer\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: grafana-renderer\n  template:\n    metadata:\n      labels:\n        app: grafana-renderer\n        app.kubernetes.io/name: grafana-renderer\n    spec:\n      containers:\n        - name: grafana-renderer\n          image: grafana/grafana-image-renderer:latest\n          ports:\n            - containerPort: 8081\n"},"k8s/prometheus.yaml":{"isBinary":false,"fileName":"k8s/prometheus.yaml","originalFileName":"k8s/prometheus.yaml","content":"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: prometheus\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n      - nodes/metrics\n      - services\n      - endpoints\n      - pods\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources:\n      - configmaps\n    verbs: [\"get\"]\n  - apiGroups:\n      - networking.k8s.io\n    resources:\n      - ingresses\n    verbs: [\"get\", \"list\", \"watch\"]\n  - nonResourceURLs: [\"/metrics\"]\n    verbs: [\"get\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n  - kind: ServiceAccount\n    name: prometheus\n    namespace: default\n---\napiVersion: monitoring.coreos.com/v1\nkind: Prometheus\nmetadata:\n  name: prometheus\nspec:\n  serviceAccountName: prometheus\n  serviceMonitorSelector:\n    matchLabels:\n      ydb-cluster-monitor: slo-storage\n  resources:\n    requests:\n      memory: 400Mi\n  enableAdminAPI: false\n  replicas: 1\n  securityContext:\n    runAsUser: 1000\n    runAsNonRoot: true\n    runAsGroup: 65534\n    fsGroup: 2000\n  storage:\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 93Gi\n        storageClassName: yc-network-ssd-nonreplicated\n"}}